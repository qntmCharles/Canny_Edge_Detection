Plan:
1: Gaussian Blur [DONE]
2: Sobel [DONE]
3: Non-Maximum Suppression [DONE]
4: Hysteresis Thresholding [DONE]
5: GUI [DONE]

TODO:
-In write up:
	-in HCI: gestalt principles of organisation
	-in design: data flow table!
	-in design: update /everything/
	-in analysis research section: point out that thresholding hysteresis will be split into two separate stages
	-point out that progress bar is inferior to a timer - it is not known how much processing is needed so a progress bar is not suitable, timer lets you know it's still going
	-data storage

-Testing:
	-deliberately break some things then fix them
	-make sure the core objectives are shown to have been met
	-use the problem with NMS (the kernels being backwards and the >=) as an example
	-checkExists test? kinda boring...
	-time the recursive and procedural versions of hysteresis
	-check timer is accurate
	-gaussian kernel values test - before normalisation and then show that normalisation needed
	-tests for NMS showing displayRegion, interpolated stuff etc
	-otsu testing?? (if kept)
	-GUI testing on separate platforms

-Evaluation
	-GUI:
		-A focus event when a window is opened by a button, but then disappears - to stop it being hidden by the main window
			-(Would require threading)

-Documentation

-Thresholding:
	-Add one more method of thresholding
	-Add thresholding method options

-GUI:
	-ask Liam about encapsulation 'n' stuff, do /Liam in gui.py

-Comment that shit:
	-gaussian [DONE]
	-convolution [DONE]
	-nms
	-main
	-sobel
	-hysteresis 
	-threshold 
	-gui

Potential:
-Change gaussian kernel radius to be 6*sigma
-Investigate dynamic thresholds
