Plan:
1: Gaussian Blur [DONE]
2: Sobel [DONE]
3: Non-Maximum Suppression [DONE]
4: Hysteresis Thresholding [DONE]
5: GUI
	5.1 Requirements:
		-Buttons for each stage
		-Open image
		-Save image - to be made possible after each stage
		-Tick boxes to include/exclude stage - how the hell will that work???
		-Timer
		-Save all images at once - do a file structure thing to store all the images nicely, then add to design

TODO:
-Store binary images rather than 0s and 255s?
-Data storage
-Compare to code bookmarked on Chrome:
	-Does NMS give the same result - NO
	-Connected component detection - recursive - is it faster?
	-Does my program actually remove weak edges that are left over?
	-Compare entire program - where is it different and is it better
	-Does thresholding method work better (probably, try it) kindaaaa?
-Fix NMS, or whatever else is wrong
-Try old NMS algorithm to see if it actually works
-GUI:
	-There should be a way to update multiple QLabels from the getFile function:
	look up slots and signals and work out how.
-Fix thresholding:
	-Can I threshold the image differently to get better thresholds
	-Does the function work properly?
	-Are there better methods of thresholding
-Comment that shit:
	-gaussian [DONE]
	-convolution [DONE]
	-nms - ugh do I have to?
	-main
	-sobel [DONE]
	-hysteresis [DONE]
	-threshold [DONE]
Potential:
-Change gaussian kernel radius to be 6*sigma
-Fiddle with algorithm for hysteresis to get it to work better (?)
-Investigate dynamic thresholds
-Try using multiprocessing (maaaaaybe)
